name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build_android:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Create debug keystore (idempotent)
        run: |
          mkdir -p android/app
          if [ -f android/app/debug.keystore ]; then
            echo "debug.keystore already exists, skipping generation"
          else
            keytool -genkey -v -keystore android/app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          fi

      - name: Build Android App Bundle
        run: |
          mkdir -p android/app/build/intermediates/assets/release/
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/build/intermediates/assets/release/index.android.bundle --assets-dest android/app/build/intermediates/res/merged/release

      - name: Build Android Release
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew bundleRelease

      - name: List build outputs
        run: |
          find android/app/build/outputs -name "*.aab" -o -name "*.apk" | head -10

  download_bundle:
    runs-on: ubuntu-latest
    needs: build_android
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Android App Bundle
        run: |
          mkdir -p $GITHUB_WORKSPACE/dist
          # Find the AAB file and copy it
          AAB_FILE=$(find $GITHUB_WORKSPACE/android/app/build/outputs -name "*.aab" | head -1)
          if [ -n "$AAB_FILE" ]; then
            cp "$AAB_FILE" $GITHUB_WORKSPACE/dist/app-release.aab
            echo "Found AAB: $AAB_FILE"
          else
            echo "No AAB file found in build outputs"
            find $GITHUB_WORKSPACE/android/app/build/outputs -type f | head -10
            exit 1
          fi

      - name: Archive Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-bundle
          path: $GITHUB_WORKSPACE/dist
